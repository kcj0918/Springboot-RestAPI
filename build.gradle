plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.dev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def queryDSLVersion = '4.2.2'
def generated = "src/main/gnerated"

ext {
	set('springBootAdminVersion', "2.3.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2:1.4.197'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testCompile('org.junit.jupiter:junit-jupiter-params')
	testRuntime('org.junit.jupiter:junit-jupiter-engine')

	compile("com.github.ulisesbocchio:jasypt-spring-boot-starter:1.17")
	compile(group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.66')

	compile("com.querydsl:querydsl-core:${queryDSLVersion}")
	compile("com.querydsl:querydsl-jpa:${queryDSLVersion}")
	compile("com.querydsl:querydsl-apt:${queryDSLVersion}")
	annotationProcessor(
			"com.querydsl:querydsl-apt:${queryDSLVersion}:jpa",
			"org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
			"javax.annotation:javax.annotation-api",
			'org.projectlombok:lombok'
	)
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

sourceSets {
	main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile) {
	options.incremental = false
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}

test {
	useJUnitPlatform()
}
